version: '3'

services:
  app:
    build: ./backend
    container_name: hackaton-nt-api
    restart: always
    volumes:
      - ./backend:/app
    expose:
      - "3000"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      HTTP_PORT: ${HTTP_PORT}
      HTTP_SCHEME: https
    depends_on:
      db:
        condition: service_healthy
  web:
    image: nginx
    container_name: hackaton-nt-web
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./backend/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
      - db
  db:
    image: postgres
    container_name: hackaton-nt-db
    expose:
      - "5432"
    volumes:
      - ./hackaton-nt:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      PGUSER: "${POSTGRES_USER}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 10
  migrate-post:
    image: migrate/migrate
    container_name: hackaton-nt-migrate
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@hackaton-nt-db:5432/${POSTGRES_DATABASE}?sslmode=disable",
        "up"
      ]
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/migrations:/migrations
  frontend:
    build: ./frontend
    container_name: hackaton-nt-frontend
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
    environment:
      REACT_APP_API_URL: ${REACT_APP_API}
    depends_on:
      - app
      - db
volumes:
  db:
  migrations:
